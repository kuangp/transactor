module transactor.examples.bank_transfer;

import transactor.language.*;
import java.util.*;

behavior transfer extends Transactor {

    void act(String[] args){
        bankaccount savings = new bankaccount(100);
        bankaccount checking = new bankaccount(100);
        teller atm = new teller(savings, checking, 0);
        standardOutput<-println("SAVINGS ACCOUNT: ") @
            savings<-printData() @
        standardOutput<-println("CHECKING ACCOUNT: ") @
            checking<-printData() @
        standardOutput<-println("TELLER: ") @
            atm<-printData() @
        atm<-transfer(101) @
        // wait for transactions to complete
        standardOutput<-println("===================================="):delay(new Integer(5000)) @
        standardOutput<-println("SAVINGS ACCOUNT: ") @
            savings<-printData() @
            standardOutput<-println() @
        standardOutput<-println("CHECKING ACCOUNT: ") @
            checking<-printData() @
            standardOutput<-println() @
        standardOutput<-println("TELLER: ") @
            atm<-printData();
    }
}
