module transactor.language;

import java.util.*;

/*
 *  * Pinger Transactor handles directing participants within a transaction to reconcile dependency information 
 *   */
behavior PingDirector extends Transactor {

    private Transactor[] participants;

    public PingDirector() {
        super(self);
    }

    public void pingStart(Transactor[] participants, Transactor coordinator, String msg, Object[] msg_args) {
        this.setTState("participants", participants);
        Object[] CDSUpdate = {msg, msg_args, this.self()};
        this.sendMsg("CDSUpdateStart", CDSUpdate, coordinator);
        this.sendMsg("ping", new Object[0], this.self());
    }

    public void ping() {
        if (!this.isStable()){
            this.sendMsg("ping", new Object[0], this.self());
        } else {
            int i;
            Object[] pingreqs = {((Transactor[])this.getTState("participants"))};
            for(i = 0; i < ((Transactor[])this.getTState("participants")).length; i++){
                this.sendMsg("pingreq", pingreqs, ((Transactor[])this.getTState("participants"))[i]);
            }
        }
    }

    public void endCDSUpdate() {
        this.stabilize();
    }
}

